// Mixins SCSS réutilisables
@use "./variables" as vars;

// Mixin pour les media queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: vars.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: vars.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: vars.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: vars.$breakpoint-xl) {
      @content;
    }
  }
}

// Mixin pour le hover seulement sur les appareils qui le supportent
@mixin hover {
  @media (hover: hover) {
    &:hover {
      @content;
    }
  }
}

// Mixin pour les transitions
@mixin transition(
  $property: all,
  $duration: vars.$transition-normal,
  $timing: ease
) {
  transition: $property $duration $timing;
}

// Mixin pour les flex layouts
@mixin flex(
  $direction: row,
  $justify: flex-start,
  $align: stretch,
  $wrap: nowrap
) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Mixin pour le centrage absolu
@mixin center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Mixin pour les ombres
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
  } @else if $level == 3 {
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.2);
  }
}

// Mixin pour les troncatures de texte
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Mixin pour les grilles responsive
@mixin grid($columns: 1, $gap: vars.$spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Mixin pour le texte avec dégradé
@mixin gradient-text($gradient) {
  background: $gradient;
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

// Mixin pour les overlay
@mixin overlay($color: rgba(vars.$black, 0.5), $z-index: 1) {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: $color;
  z-index: $z-index;
}
